{"version":3,"sources":["components/GameObject.ts","components/SpaceShip.ts","components/Stage.ts","index.ts"],"names":[],"mappings":";;;;AAEA,IAAA,aAAA,aAAA,YAAA;AAIE,aAAA,UAAA,CACS,MADT,EAES,QAFT,EAEuC;AAD9B,aAAA,MAAA,GAAA,MAAA;AACA,aAAA,QAAA,GAAA,QAAA;AAEP,aAAK,GAAL,GAAW,OAAO,UAAP,CAAkB,IAAlB,CAAX;AACD;AAED,eAAA,SAAA,CAAA,MAAA,GAAA,UAAO,IAAP,EAAa,IAAb,EAAiB;AACT,AEdV,IAAA,QFcU,KAAA,CEdV,IFcU,QAAA,IEdV,QAAA,aAAA,CAAA,CAAA;AFcU,AEZV,IAAA,QFYY,AEZZ,IFYY,GAAA,CAAF,KEZV,YAAA;AFYU,AEPR,ACPF,IAAA,QHce,CEPb,CCPF,EHce,EEPb,CFOa,AEPM,CFOX,KEPR,EAA4C,GCP9C,QAAA,oBAAA,CAAA,CAAA;AHgBI,AETiB,ACLrB,OAAO,MHcE,AETY,ACLrB,GAAgB,GDKK,EFSjB,CAAc,AETG,MAAA,ACLL,EHcZ,GAAyB,CAAE,KAAK,KAAL,CAAW,OAAO,CAAlB,EAAqB,OAAO,CAA5B,CAAF,IAAoC,MAAM,KAAK,EAA/C,IAAqD,GAA9E;AAEA,AEVA,ACLF,QAAM,IHeE,CEVD,GAAL,CCLqD,EDK1C,EFUI,KAAK,AEVF,ACL4C,QHe/C,CAAc,CEVlB,CAAkB,GCLwB,CDK1C,ACLkE,CDK7E,CFUe,GAAyB,GGfa,CAAvD,CHe+C,EAA9B,GAAiC,GAAhD;AAEA,AEXA,ACLF,QAAM,KHgBC,AEXA,GCLe,IDKpB,ACLwB,CHgBxB,CAAc,CAAd,GAAkB,EGhBM,GHgBD,MGhBC,CAAJ,CHgBF,AGhBY,CHgBE,CAAd,GAAkB,CGhBhB,CAAtB,GHgB2C,GAAL,CAAS,MAAT,CAApC;AACA,AEXD,ACJD,UAAM,GHeC,GGfP,KHeE,CAAc,CAAd,GAAkB,KAAK,QAAL,CAAc,CAAd,GAAkB,KAAK,GAAL,CAAS,MAAT,CAApC;AACD,AEVD,ACLA,KHMA,KEDA,ECLQ,GAAR,CAAY,GDKZ,CAAA,OAAA,ECLA,CDKA,YAAA;AFYA,AEXE,ACLH,CAND,cHsBE,AEXS,SFWT,CAAA,MEXE,CAAwB,EFW1B,GAAA,GEXE,EAAkC,KFW1B,AEX+B,GFWzC,EAAqB,QEXnB;AFYA,AEXA,YFWM,CEXD,KFWO,IAAI,IEXhB,CFWY,EAAZ;AACA,AEXA,YFWI,CEXC,EFWL,GAAU,CEXV,CAAY,CFWZ,IEXA,CAAkB,UAAlB,GAA+B,OAA/B;AFaA,AEXA,aFWK,AEXA,MFWL,AEXA,GFWc,AEXA,GFWd,CEXkB,YAAA,SAAA,CAAJ,CAAc,KAAK,MAAnB,EAA2B;AFY1C,AEXG,KFMJ,UENO,GADoC;AFc3C,AEZI,eFYJ,AEZO,GAFoC,MFc3C,CAAA,MAAA,GAAA,YAAA;AACQ,AEZJ,YFYI,KAAA,KAAA,AEZM,IAH6B,IFenC;AAAA,AEXJ,YFYA,IAAA,GAAA,CADI,EEXM,CAJ6B;AFenC,AEVJ,YFYA,IAAA,GAAA,CAFI,AEVI,EAL+B;AFenC,AC/BV,ACsBM,IDtBN,QDkCM,OClCN,ACsBa,CFYP,GAAA,KAHI,OC/BV,QAAA,cAAA,CAAA,CAAA;AD+BU,AC7BV,ACc6C,IDdzC,KCcc,CAAd,EFmBE,CCjCO,QDiCP,GAAA,MAJI;AAAA,AC5BR,ACsBE,YFWE,CCjCK,ACsBF,CDvBI,ICuBT,GAAa,EFWX,EEXe,CFWf,QALI,GENW,SAAA,CAAJ,CAAc,KAAK,MAAnB,EAA2B;AFcxC,ACnCF,ACsBI,aFaG,ACnCE,ECsBF,CFaL,CAAS,CEd+B,GFcxC;AAEA,ACvCS,ACyBP,CDzBN,WDuCU,GEdD,GAFmC,GFgBzB,WAAW,KAAK,EAAhB,GAAmB,GAAlC;AAEA,ACpCJ,ACqBM,ODrBC,MDoCE,GAAL,CAAS,KEfG,CDrBhB,CAAwB,EDoCpB,CAAmB,AElBqB,IFkBjB,ICpC3B,EAAqC,EDoCF,CAA/B,EAAkC,IAAI,CCpCL,CAAA,EAAC,KDoCa,CAA/C;AACA,ACpCF,ACqBI,aFeG,ACpCE,CAAT,EDoCE,CAAS,KEfG,CFeZ,CAAgB,AEnBwB,MFmBxC;AACA,ACpCH,ACqBK,CDvBN,YDsCS,GAAL,CAAS,GEfC,EAL8B,IFoBxC,CAAmB,CAAC,CAAD,GAAK,QAAQ,CAAhC,EAAmC,CAAC,CAAD,GAAK,SAAS,CAAjD;AAEA,ACpCJ,ACoBM,IDpBN,SDoCS,GAAL,ACpCJ,CDoCa,EEhBA,OFgBT,CAAmB,ECpCvB,GDoC4B,MAAxB,CCpCJ,CDoCoC,CAAhC,EAAmC,CAAnC,CCpCJ,CDoC0C,CCpC1C,IDoCI,EAA6C,MAA7C;AAEA,ACtCmC,ACcK,SAA3B,CAAb,GFwBK,CCtC8B,EDsCnC,CAAS,MCtC0B,EAAA,CDsCnC,KCtCmC;ADuCnC,ACtCF,ACqBC,KAtBD,QFuCO,ACtCP,GDsCE,CAAS,KCtCX,CDsCE,ACrCO,MADT,EAES,QAFT,EAEuC;ADsCrC,ACxCF,ACuBA,UAAA,EDvBA,CDwCO,GAAL,CAAS,EEjBX,CDnBE,ACmBF,IFiBE,GCpCA,IAAA,CAAA,CCmBF,GDnBE,ACmBF,EDnBQ,MAAN,EAAc,ECmBhB,MDnBE,KAAuB,IAJzB;ADyCC,ACxCQ,ACuBP,KFNF,QEMO,CDvBE,KCuBP,CDvBO,ACuBK,GDvBL,ECuBP,GAAoB,CDvBb,MCuBoB,UAA3B;AFkBJ,ACxCW,ACuBP,WFiBJ,EEjBS,CDvBE,KCuBP,CAAY,CFiBhB,CCxCW,GAAA,CCuBP,GAAqB,IDvBd,GCuBqB,WAA5B;AFpCJ,ACgBI,ACqBD,CFrCH,EAAA,EEkCE,SDlBO,SAAL,CAAe,6EAAf;ACuBF,UAAA,SAAA,CAAA,MAAA,GAAA,YAAA;ADtBC,ACsBD,YAAA,QAAA,IAAA;ADpBA,ACqBE,aAAK,CDrBP,ECqBE,CAAS,MDrBX,CAAA,ECqBE,CAAmB,CAAnB,EAAsB,CAAtB,EAAyB,KAAK,CDrBhC,GAAA,ECqB2B,CAAY,KAArC,EAA4C,EDrB9C,GCqBmD,MAAL,CAAY,MAAxD;ADpBQ,ACqBR,YDrBQ,CCqBH,MAAL,CAAY,GDrBJ,GCqBR,EDrBQ,QAAA,CAAA,QAAA;AACR,ACqBA,YDrBG,CCqBE,KAAL,CAAW,CDrBX,EAAa,GCqBb;ADpBE,ACsBF,eAAO,EDtBA,MAAL,CAAY,OAAO,KCsBrB,CAA6B,CDtB3B,EAA4B,OAAO,ECsBR,KDtB3B;AACD,ACqBkC,mBAAA,MAAK,MAAL,EAAA;ADpBpC,ACoBiD,KDzBlD,ICyBE;ADlBF,ACmBC,KAND,SDbA,SAAA,CAAA,MAAA,GAAA,YAAA;AACE,ACmBJ,WAAA,EDnBS,GCmBT,YDnBI;AACA,AC5BJ,CAAA,EAAA,YD4BI,SAAA,CAAM,MAAN,CAAY,IAAZ,CAAY,IAAZ;AACD,KAHD;AAIF,WAAA,SAAA;AApBA,CAAA,CAAuC,aAAA,SAAA,CAAvC,CAAA","file":"src.2e4c5f23.map","sourceRoot":"../src","sourcesContent":["import { IfcSpaceShipSettings } from './interfaces';\n\nexport default class GameObject {\n  ctx : CanvasRenderingContext2D;\n  sprite: HTMLImageElement;\n\n  constructor(\n    public canvas: HTMLCanvasElement,\n    public settings: IfcSpaceShipSettings\n  ) {\n    this.ctx = canvas.getContext('2d');\n  }\n\n  moveTo(newX, newY) {\n    const { x, y } = this.settings;\n\n    this.settings.rotation = - Math.atan2(newX - x, newY - y) * (180 / Math.PI) - 180;\n\n    const radian = this.settings.rotation * Math.PI/180;\n\n    this.settings.x = this.settings.x + Math.sin(radian);\n    this.settings.y = this.settings.y - Math.cos(radian);\n  }\n\n  setSprite(src: string) {\n    const img = new Image();\n    img.src = src;\n\n    this.sprite = img;\n  }\n\n  render() {\n    const {\n      x,\n      y,\n      width,\n      height,\n      rotation\n    } = this.settings;\n\n    this.ctx.save();\n\n    const radian = rotation * Math.PI/180;\n\n    this.ctx.translate(x + width / 2, y + height / 2);\n    this.ctx.rotate(radian);\n    this.ctx.translate(-x - width / 2, -y - height / 2);\n\n    this.ctx.drawImage(this.sprite, x, y, width, height);\n\n    this.ctx.closePath();\n    this.ctx.stroke();\n\n    this.ctx.restore();\n  }\n}\n","import { IfcSpaceShipSettings } from './interfaces';\nimport GameObject from './GameObject';\n\nlet cursor = {\n  clientX: 0,\n  clientY: 0,\n};\n\nwindow.addEventListener('mousemove', e => {\n  cursor = e;\n});\n\nexport default class SpaceShip extends GameObject {\n  constructor(\n    public canvas: HTMLCanvasElement,\n    public settings: IfcSpaceShipSettings\n  ) {\n    super(canvas, settings);\n    this.setSprite('http://chittagongit.com//images/spaceship-icon-png/spaceship-icon-png-6.jpg');\n  }\n\n  playerMovements() {\n    const { isPlayer } = this.settings;\n    if(isPlayer) {\n      this.moveTo(cursor.clientX, cursor.clientY);\n    }\n  }\n\n  render() {\n    this.playerMovements();\n    super.render();\n  }\n}\n","import SpaceShip from './SpaceShip';\n\nexport default class Stage {\n  player: SpaceShip;\n  enemy: SpaceShip;\n  ctx : CanvasRenderingContext2D;\n\n  constructor(public canvas: HTMLCanvasElement) {\n    this.ctx = canvas.getContext('2d');\n    this.onMount();\n  }\n\n  onMount() {\n    window.addEventListener('resize', this.setFullScreen);\n    this.setFullScreen();\n    this.canvas.style.background = 'black';\n\n    this.player = new SpaceShip(this.canvas, {\n      x: 100,\n      y: 100,\n      isPlayer: true,\n      rotation: 1,\n      height: 30,\n      width: 30\n    });\n\n    this.enemy = new SpaceShip(this.canvas, {\n      x: 200,\n      y: 200,\n      isPlayer: false,\n      rotation: 60,\n      height: 60,\n      width: 60\n    });\n  }\n\n  setFullScreen() {\n    this.canvas.width = window.innerWidth;\n    this.canvas.height = window.innerHeight;\n  }\n\n  render() {\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n    this.player.render();\n    this.enemy.render();\n\n    window.requestAnimationFrame(() => this.render());\n  }\n}\n","import Stage from './components/Stage';\n\nwindow.onload = () => {\n  const canvas : HTMLCanvasElement = <HTMLCanvasElement> document.getElementById('canvas');\n  const stage : Stage = new Stage(canvas);\n\n  stage.render();\n  console.log('dwwcscssass')\n};\n"]}